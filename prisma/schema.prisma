// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Settings {
  id                Int      @id @default(autoincrement())
  clientid          String
  clientsecret      String
}

model JewelryDesignForm {
  id                      Int      @id @default(autoincrement())
  firstName               String
  lastName                String
  emailAddress            String  
  countryCode             String
  phoneNumber             String
  designOptions           String
  metalOptions            String
  preferredPriceRange     String
  preferredContactMethod  String
  availabilityOption      String
  designNotes             String?
  fileUpload              String?  // This can store file paths or URLs if you're saving file information
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  uploadFiles             UploadFiles[]    // Establishes the one-to-many relationship with UploadFiles

}

model UserTokens {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  accessToken     String
  refreshToken    String
  tokenExpiresAt  DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Optional: Create an index on `email` if needed
  @@index([email])
}

model UploadFiles {
  id              Int                @id @default(autoincrement())
  entryId         Int
  filename        String
  refreshToken    String
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  jewelryDesign   JewelryDesignForm  @relation(fields: [entryId], references: [id])

  @@index([entryId])
}